//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "work")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub resume_id: i32,
    pub company_name: String,
    pub position: String,
    pub duration: String,
    pub location: String,
    pub projects: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::resume::Entity",
        from = "Column::ResumeId",
        to = "super::resume::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Resume,
}

impl Related<super::resume::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Resume.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
