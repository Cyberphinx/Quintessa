//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "project")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub created_at: Option<DateTimeWithTimeZone>,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
    pub name: Option<String>,
    pub category: Option<String>,
    pub sub_category: Option<String>,
    pub description: Option<String>,
    pub tasks: Option<String>,
    pub sector: Option<String>,
    pub location: Option<String>,
    pub address: Option<String>,
    pub client: Option<String>,
    pub start_date: Option<String>,
    pub completion_date: Option<String>,
    pub architect: Option<String>,
    pub main_contractor: Option<String>,
    pub project_manager: Option<String>,
    pub structural_engineer: Option<String>,
    pub services_engineer: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::media::Entity")]
    Media,
}

impl Related<super::media::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Media.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
